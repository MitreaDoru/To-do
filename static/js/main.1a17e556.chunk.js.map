{"version":3,"sources":["AddTaskForm.module.css","AddButton.module.css","DeleteButton.module.css","EditButton.module.css","EditForm.module.css","Task.module.css","App.module.css","store/tasks.js","DeleteButton.js","EditButton.js","EditForm.js","Tasks.js","userTasks.js","store/showAddForm-slice.js","AddTaskForm.js","AddButton.js","App.js","store/redux-index.js","index.js"],"names":["module","exports","initialState","tasks","id","v4","title","description","showEdit","showEditForm","tasksSlice","createSlice","name","reducers","addTask","state","action","payload","length","unshift","newTitle","newDescription","deleteTask","forEach","task","filter","editTask","toggleEditTask","tasksAction","actions","DeleteButton","props","dispatch","useDispatch","className","styled","delete","onClick","EditButton","edit","EditForm","defaultValues","editTitle","editDescription","useSelector","tasksList","titleForEdit","descriptionForEdit","form","onSubmit","e","preventDefault","htmlFor","defaultValue","onChange","target","value","type","Tasks","userTasks","get","map","uiSlice","showTaskForm","toggleAddTask","uiAction","AddTaskForm","confirm","AddButton","showForm","ui","button","add","App","renderTasks","list","store","configureStore","reducer","tasksReducer","uiReducer","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.1a17e556.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"AddTaskForm_form__1_3ej\",\"confirm\":\"AddTaskForm_confirm__Ryd8_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"AddButton_button__38UuW\",\"add\":\"AddButton_add__1smvR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"delete\":\"DeleteButton_delete__2Vk7H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"edit\":\"EditButton_edit__1n0nn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"EditForm_form__LYtC9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"task\":\"Task_task__g-VqF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"App_list__cUBG0\"};","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { v4 } from \"uuid\";\r\nconst initialState = {\r\n  tasks: [\r\n    { id: v4(), title: \"Work\", description: \"finish the app\", showEdit: false },\r\n    { id: v4(), title: \"Home\", description: \"Clean\", showEdit: false },\r\n  ],\r\n  title: \"\",\r\n  description: \"\",\r\n  showEditForm: false,\r\n};\r\nconst tasksSlice = createSlice({\r\n  name: \"tasksList\",\r\n  initialState: initialState,\r\n  reducers: {\r\n    addTask(state, action) {\r\n      const { title, description } = action.payload\r\n      if (title.length > 0 && description.length > 3) {\r\n        state.tasks.unshift({\r\n          id: v4(),\r\n          title: title,\r\n          description: description,\r\n          showEdit: false,\r\n        });\r\n      }\r\n    },\r\n    newTitle(state, action) {\r\n      state.title = action.payload;\r\n    },\r\n    newDescription(state, action) {\r\n      state.description = action.payload;\r\n    },\r\n    deleteTask(state, action) {\r\n      state.tasks.forEach((task) => {\r\n        if (task.id === action.payload) {\r\n          state.tasks = state.tasks.filter(\r\n            (task) => task.id !== action.payload\r\n          );\r\n        }\r\n      });\r\n    },\r\n    editTask(state, action) {\r\n      const { id, title, description } = action.payload;\r\n      state.tasks.forEach((task) => {\r\n        if (task.id === id) {\r\n          task.title = title;\r\n          task.description = description;\r\n          task.showEdit = !task.showEdit;\r\n        }\r\n\r\n      });\r\n      state.description = ''\r\n      state.title = ''\r\n    },\r\n    toggleEditTask(state, action) {\r\n      const id = action.payload;\r\n      state.tasks.forEach((task) => {\r\n        if (task.id === id) {\r\n          task.showEdit = !task.showEdit;\r\n          state.title = task.title;\r\n          state.description = task.description;\r\n        }\r\n      });\r\n      state.title = '';\r\n      state.description = '';\r\n    },\r\n  },\r\n});\r\n\r\nexport const tasksAction = tasksSlice.actions;\r\nexport default tasksSlice.reducer;","import { useDispatch } from \"react-redux\";\r\nimport { tasksAction } from \"./store/tasks\";\r\nimport styled from './DeleteButton.module.css'\r\nconst DeleteButton = (props) => {\r\n  const dispatch = useDispatch();\r\n  const deleteHandler = () => {\r\n    dispatch(tasksAction.deleteTask(props.id));\r\n  };\r\n  return <button className={styled.delete} onClick={deleteHandler}>Delete task</button>;\r\n};\r\n\r\nexport default DeleteButton;\r\n","import { tasksAction } from \"./store/tasks\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport styled from './EditButton.module.css'\r\nconst EditButton = (props) => {\r\n  const dispatch = useDispatch();\r\n  const editTaskHandler = () => {\r\n    dispatch(tasksAction.toggleEditTask(props.id));\r\n  };\r\n  return <button className={styled.edit} onClick={editTaskHandler}>Edit task</button>;\r\n};\r\n\r\nexport default EditButton;\r\n","import { tasksAction } from \"./store/tasks\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport styled from './EditForm.module.css'\r\n\r\nconst EditForm = (props) => {\r\n  const dispatch = useDispatch();\r\n  let editTitle = '';\r\n  let editDescription = '';\r\n  const changeTitleHandler = (e) => {\r\n    editTitle = e.target.value\r\n    dispatch(tasksAction.newTitle(e.target.value));\r\n  };\r\n  const changeDescriptionHandler = (e) => {\r\n    editDescription = e.target.value\r\n    dispatch(tasksAction.newDescription(e.target.value));\r\n  };\r\n  const submitEditedTask = (e) => {\r\n    e.preventDefault();\r\n    dispatch(tasksAction.editTask({ id: props.id, title: editTitle ? editTitle : titleForEdit, description: editDescription ? editDescription : descriptionForEdit }));\r\n  };\r\n\r\n  let defaultValues;\r\n  useSelector((state) =>\r\n    state.tasksList.tasks.forEach((task) => {\r\n      if (task.id === props.id) {\r\n        defaultValues = { title: task.title, description: task.description };\r\n      }\r\n    })\r\n  );\r\n  const titleForEdit = defaultValues.title;\r\n  const descriptionForEdit = defaultValues.description;\r\n  return (\r\n    <form className={styled.form} onSubmit={submitEditedTask}>\r\n      <label htmlFor=\"title\">Title</label>\r\n      <input\r\n        defaultValue={titleForEdit}\r\n        onChange={changeTitleHandler}\r\n        type=\"text\"\r\n        id=\"title\"\r\n      />\r\n      <label htmlFor=\"description\">Description</label>\r\n      <input\r\n        defaultValue={descriptionForEdit}\r\n        onChange={changeDescriptionHandler}\r\n        type=\"text\"\r\n        id=\"description\"\r\n      />\r\n      <button type=\"submit\">Confirm</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default EditForm;\r\n","import DeleteButton from \"./DeleteButton\";\r\nimport EditButton from \"./EditButton\";\r\nimport { useSelector } from \"react-redux\";\r\nimport EditForm from \"./EditForm\";\r\nimport styled from './Task.module.css'\r\nconst Tasks = (props) => {\r\n  let showEdit;\r\n  useSelector((state) =>\r\n    state.tasksList.tasks.forEach((task) => {\r\n      if (task.id === props.id) {\r\n        showEdit = task.showEdit;\r\n      }\r\n    })\r\n  );\r\n\r\n  return (\r\n    <div className={styled.task}>\r\n      <EditButton id={props.id} />\r\n      <DeleteButton id={props.id} />\r\n      {showEdit && <EditForm id={props.id} />}\r\n      <h1>{props.task.title}</h1>\r\n      <p>{props.task.description}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n","import Tasks from \"./Tasks\";\r\nimport styled from './userTasks.module.css'\r\nfunction get(tasks) {\r\n  return tasks.map((task) => (\r\n    <li key={task.id}>\r\n      <Tasks task={task} id={task.id} />\r\n    </li>\r\n  ));\r\n}\r\n\r\nconst userTasks = {\r\n  get,\r\n};\r\n\r\nexport default userTasks;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst uiSlice = createSlice({\r\n  name: \"ui\",\r\n  initialState: { showTaskForm: false },\r\n  reducers: {\r\n    toggleAddTask(state) {\r\n      state.showTaskForm = !state.showTaskForm;\r\n    },\r\n  },\r\n});\r\n\r\nexport const uiAction = uiSlice.actions;\r\n\r\nexport default uiSlice.reducer;\r\n","import { useDispatch } from \"react-redux\";\r\nimport { tasksAction } from \"./store/tasks\";\r\nimport { uiAction } from \"./store/showAddForm-slice\";\r\nimport styled from './AddTaskForm.module.css'\r\nconst AddTaskForm = () => {\r\n  const dispatch = useDispatch();\r\n  let newTitle = '';\r\n  let newDescription = '';\r\n\r\n  const changeTitleHandler = (e) => {\r\n    newTitle = e.target.value\r\n\r\n  };\r\n  const changeDescriptionHandler = (e) => {\r\n    newDescription = e.target.value\r\n\r\n  };\r\n  const submitNewTask = (e) => {\r\n    e.preventDefault();\r\n    dispatch(tasksAction.addTask({ title: newTitle, description: newDescription }));\r\n    dispatch(uiAction.toggleAddTask());\r\n  };\r\n  return (\r\n    <form className={styled.form} onSubmit={submitNewTask}>\r\n      <div className={styled.title}>\r\n        <label htmlFor=\"title\">Title</label>\r\n        <input onChange={changeTitleHandler} type=\"text\" id=\"title\" />\r\n      </div>\r\n      <div className={styled.description}>\r\n        <label htmlFor=\"description\">Description</label>\r\n        <input onChange={changeDescriptionHandler} type=\"text\" id=\"description\" />\r\n      </div>\r\n      <button className={styled.confirm} type=\"submit\">Confirm</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddTaskForm;\r\n","import AddTaskForm from \"./AddTaskForm\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { uiAction } from \"./store/showAddForm-slice\";\r\nimport styled from './AddButton.module.css'\r\n\r\nconst AddButton = () => {\r\n  const dispatch = useDispatch();\r\n  const showForm = useSelector((state) => state.ui.showTaskForm);\r\n  const addFormHandler = () => {\r\n    dispatch(uiAction.toggleAddTask());\r\n  };\r\n  return (\r\n    <div className={styled.button}>\r\n      <button className={styled.add} onClick={addFormHandler}>Add Task</button>\r\n      {showForm && <AddTaskForm />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddButton;\r\n","import \"./index.css\";\nimport userTasks from \"./userTasks\";\nimport AddButton from \"./AddButton\";\nimport { useSelector } from \"react-redux\";\nimport styled from \"./App.module.css\"\n\nconst App = () => {\n  // render task\n  const tasks = useSelector((state) => state.tasksList.tasks);\n  const renderTasks = userTasks.get(tasks);\n  return (\n    <div>\n      <div>\n        <AddButton />\n      </div>\n      <ul className={styled.list}>{renderTasks}</ul>\n    </div>\n  );\n};\n\nexport default App;","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport tasksReducer from \"./tasks\";\r\nimport uiReducer from \"./showAddForm-slice\";\r\nconst store = configureStore({\r\n  reducer: { tasksList: tasksReducer, ui: uiReducer },\r\n});\r\n\r\nexport default store;\r\n","import ReactDOM from \"react-dom/client\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"../src/store/redux-index\";\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n);"],"sourceRoot":""}