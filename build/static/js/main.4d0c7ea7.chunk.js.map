{"version":3,"sources":["App.js","index.js"],"names":["App","useState","dataLocation","setDataLocation","location","useCallback","fetch","response","json","key","data","loadedLocation","results","push","id","value","Math","random","toString","streetName","street","name","streetNumber","number","city","postCode","postcode","useEffect","dataList","map","adress","DescriptiveLocation","headers","Object","entries","className","ReactDOM","createRoot","document","getElementById","render"],"mappings":"wMAkEeA,EAhEH,WACV,MAAwCC,mBAAS,IAAG,mBAA7CC,EAAY,KAAEC,EAAe,KAE9BC,EAAWC,sBAAW,gCAAC,oHACJC,MAAM,yCAAyC,KAAD,EAAvD,OAARC,EAAQ,gBACKA,EAASC,OAAO,KAAD,EAIlC,IAAWC,KAJLC,EAAI,OAEJC,EAAiB,GAELD,EAAKE,QACrBD,EAAeE,KAAK,CAClBC,GAAIJ,EAAKE,QAAQH,GAAKK,GAAGC,MACrBL,EAAKE,QAAQH,GAAKK,GAAGC,MACrBC,KAAKC,SAASC,WAClBC,WAAYT,EAAKE,QAAQH,GAAKL,SAASgB,OAAOC,KAC9CC,aAAcZ,EAAKE,QAAQH,GAAKL,SAASgB,OAAOG,OAChDC,KAAMd,EAAKE,QAAQH,GAAKL,SAASoB,KACjCC,SAAUf,EAAKE,QAAQH,GAAKL,SAASsB,WAIzCvB,EAAgBQ,GAAgB,2CAC/B,IACHgB,qBAAU,WACRvB,GACF,GAAG,CAACA,IAEJ,IAAMwB,EAAW1B,EAAa2B,KAAI,SAACC,GAAM,OACvC,+BACE,6BAAKA,EAAOX,aACZ,mCAAMW,EAAOR,gBACb,mCAAMQ,EAAON,QACb,mCAAMM,EAAOL,cAJNK,EAAOhB,GAKX,IAGDiB,EAAsB,CAC1BZ,WAAY,YACZG,aAAc,cACdE,KAAM,GACNE,SAAU,IAGNM,EACJ,+BACE,6BAAKC,OAAOC,QAAQH,GAAqB,GAAG,KAC5C,6BAAKE,OAAOC,QAAQH,GAAqB,GAAG,KAC5C,6BAAKE,OAAOC,QAAQH,GAAqB,GAAG,KAC5C,6BAAKE,OAAOC,QAAQH,GAAqB,GAAG,QAIhD,OACE,8BACE,uBAAOI,UAAU,QAAO,SACtB,kCACGH,EACAJ,QAKX,EC3DaQ,IAASC,WAAWC,SAASC,eAAe,SACpDC,OAAO,cAAC,EAAG,I","file":"static/js/main.4d0c7ea7.chunk.js","sourcesContent":["import { useCallback, useEffect, useState } from \"react\";\nimport \"./index.css\";\nconst App = () => {\n  const [dataLocation, setDataLocation] = useState([]);\n\n  const location = useCallback(async () => {\n    const response = await fetch(\"https://randomuser.me/api/?results=20\");\n    const data = await response.json();\n\n    const loadedLocation = [];\n\n    for (const key in data.results) {\n      loadedLocation.push({\n        id: data.results[key].id.value\n          ? data.results[key].id.value\n          : Math.random().toString(),\n        streetName: data.results[key].location.street.name,\n        streetNumber: data.results[key].location.street.number,\n        city: data.results[key].location.city,\n        postCode: data.results[key].location.postcode,\n      });\n    }\n\n    setDataLocation(loadedLocation);\n  }, []);\n  useEffect(() => {\n    location();\n  }, [location]);\n\n  const dataList = dataLocation.map((adress) => (\n    <tr key={adress.id}>\n      <td>{adress.streetName}</td>\n      <td> {adress.streetNumber}</td>\n      <td> {adress.city}</td>\n      <td> {adress.postCode}</td>\n    </tr>\n  ));\n\n  const DescriptiveLocation = {\n    streetName: \"some name\",\n    streetNumber: \"some number\",\n    city: \"\",\n    postcode: \"\",\n  };\n\n  const headers = (\n    <tr>\n      <td>{Object.entries(DescriptiveLocation)[0][0]}</td>\n      <td>{Object.entries(DescriptiveLocation)[1][0]}</td>\n      <td>{Object.entries(DescriptiveLocation)[2][0]}</td>\n      <td>{Object.entries(DescriptiveLocation)[3][0]}</td>\n    </tr>\n  );\n\n  return (\n    <div>\n      <table className=\"table\">\n        <tbody>\n          {headers}\n          {dataList}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}